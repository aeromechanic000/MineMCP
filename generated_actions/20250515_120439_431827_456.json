{
    "task": "Perform a dance sequence by moving in a circular pattern and jumping periodically to simulate dancing. The dance should last for about 10 seconds and include at least 3 jumps and 2 full circles around the current position to make it visually engaging for the player.",
    "code": "def generated_action(agent):\n    import time\n    import math\n    \n    try:\n        # Get current position\n        start_pos = agent.bot.entity.position\n        \n        # Dance duration (10 seconds)\n        dance_duration = 10\n        start_time = time.time()\n        \n        # Number of jumps and circles\n        jumps = 0\n        circles = 0\n        \n        # Circle radius\n        radius = 2\n        \n        # Dance loop\n        while time.time() - start_time < dance_duration:\n            # Calculate angle for circular movement\n            elapsed = time.time() - start_time\n            angle = (elapsed / dance_duration) * 2 * math.pi\n            \n            # Calculate circular position\n            x = start_pos.x + radius * math.cos(angle)\n            z = start_pos.z + radius * math.sin(angle)\n            \n            # Move in circle\n            agent.bot.lookAt(vec3.Vec3(x, start_pos.y, z))\n            agent.bot.setControlState('forward', True)\n            \n            # Jump periodically (every ~3 seconds)\n            if elapsed > jumps * 3 and jumps < 3:\n                agent.bot.setControlState('jump', True)\n                time.sleep(0.2)\n                agent.bot.setControlState('jump', False)\n                jumps += 1\n                \n            # Count circles\n            if angle > circles * 2 * math.pi and circles < 2:\n                circles += 1\n                \n            time.sleep(0.1)\n            \n        # Stop moving\n        agent.bot.setControlState('forward', False)\n        \n        # Inform player\n        chat(agent, agent.bot.username, \"Dance complete! Did you like it?\")\n        \n        return \"\"\n    except Exception as e:\n        return str(e)"
}